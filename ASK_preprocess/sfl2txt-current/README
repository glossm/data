===== FOREWORD =====

This program extracts labels for regions of a soundtrack from Sound Forge SFL files
and saves them as TXT Files recognized by Audacity. The reverse operation is also
supported. The SFL files are assumed to be created by saving the regions list as a
separate file, should that not be the case, the program is likely to be inaplicable.

The SFL file structure was studied using Sound Forge 4.5, compatibility with other
versions remains unknown. The software was developed in Debian Lenny on x86 system.


===== FEATURES =====

The converter can perform sfl to txt and txt to sfl conversion. Additionaly, there is support for
SubRip SRT files, as the original files that prompted the converter's development were 
transcriptions of speech in a video file. Although it should be noted that this feature is auxiliary,
for SRT lacks support for important traits of the other two formats, especially for overlapping
regions. Nonetheless, it still can be used to create a starting point provided there is an already
existing file with subtitles and you would like to work with the markup in Audacity. It also may
be of some use to export the labels into an SRT file, though it most likely would require a lot of
post-processing in subtitle editors, e.g. gaupol.

Additionally, it is not a good idea to do srt<->txt conversion, as by now, the program stores lengths
of regions in sample rate units (1/frequency), which will inevitably make the timing inaccurate.
Although "inaccurate" in absoulte values actually means less than one-hundredth of a second off.

A note on character encoding: the converter treats the labels "as is", not performing conversion
of character sets of any kind. Therefore, if the encoding of source and target files should be
different, you should use iconv or similar software do change the encoding of the TXT or SRT files.
Trying to convert SFL files in the same manner will be futile.


===== INSTALLATION and USE =====

To compile the converter type
$ make
in the directory containing its source code.

If you so desire, you can install the program to /usr/bin by
# make install
However, this is not necessary and the converter will work right from the build directory.

To remove installed software, type
# make uninstall

To apply the program, use

$ sfl2txt [-i <infile>] [-o <outfile>] [-s] [-r <sample_rate>] [-f <source_format>] [-t <target_format>]

Depending on the file extentions, the converter will perform the appropriate task. The sample_rate
should be set equal to the sample rate of the corresponding sound file, as the SFL format relies on
it to store starting positions and lengths of the regions. The default value is 44100 Hz. Failure to 
set the correct sample rate will result in wrong timing in the outfile.
Example:
$ sfl2txt -i samplefile.sfl -o samplefile.txt -r 44100
-- will convert from SFL to TXT assuming the sample rate of 44.1 KHz.

As of version 0.5, in absense of -i or -o option, the program will read from standard input and write to
standard output, respectively. In that case, use -f and -t options to change input and output formats if
the default values of "from sfl" and "to txt" are not what you want. If filenames are specified in -i or -o
options, setting -f and -t options will override formats determined by filename extension.
Example:
$ sfl2txt -i ../sample.sfl | iconv -f cp1251
-- will convert from SFL to TXT and convert the encoding from CP1251 to the current system encoding.

Also, an -s option generates the output filename based on the input filename, changing its extension
as appropriate (e.g. from 'sfl' to 'srt', if that is the conversion mode). If there was no extension, it will
be simply appended. Finally, you'll have to rely on -f and -t options to set desired conversion mode.
$ sfl2txt -i ../sample.sfl -s
-- will save the output to '../sample.txt' (default setting is sfl to txt, 44100 Hz).

Two less useful options are:
'-h' for short summary of options
and
'-v' for showing program's version

===== TERMS OF USE =====

This software is released under GNU GPL v3 or later, please refer to the COPYING file for terms
of use and disclaimer of warranty.